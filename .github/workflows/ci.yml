name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - main
      - feature
      - dev
      - release**
    paths-ignore:
      - 'README.md'
      - 'doc/**'
      - 'fastlane/**'
      - 'assets/**'
      - '.github/**/*.md'
      - '.github/FUNDING.yml'
      - '.github/ISSUE_TEMPLATE/**'
  push:
    branches:
      - master
      - main
      - feature
    paths-ignore:
      - 'README.md'
      - 'doc/**'
      - 'fastlane/**'
      - 'assets/**'
      - '.github/**/*.md'
      - '.github/FUNDING.yml'
      - '.github/ISSUE_TEMPLATE/**'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - uses: gradle/wrapper-validation-action@v1

      - name: Create and checkout branch
        # push events already checked out the branch
        if: github.event_name == 'pull_request'
        run: git checkout -B ${{ github.head_ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "temurin"
          cache: 'gradle'
          
      - name: Short SHA
        run: echo "COMMIT_SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        
      - name: Prev TAG
        run: echo "prev_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
        
      - name: Actual TAG
        if: github.ref == 'refs/heads/main'
        run: |
          VERSION_TAG=$(git tag --points-at HEAD)
          if [ -z "$VERSION_TAG" ]; then 
            VERSION_TAG=$(echo $prev_tag | awk -F. -v OFS=. '{$NF += 1 ; print}');
          fi
          
          echo "tag=$VERSION_TAG" >> $GITHUB_ENV
          
          major=`echo $VERSION_TAG | cut -d. -f1 | grep -o '[0-9]\+'`
          minor=`echo $VERSION_TAG | cut -d. -f2 | grep -o '[0-9]\+'`
          revision=`echo $VERSION_TAG | cut -d. -f3 | grep -o '[0-9]\+'`
          
          echo "VERSION_NAME=$major.$minor" >> gradle.properties
          echo "VERSION_CODE=$revision" >> gradle.properties
          
      - name: Build debug APK and run jvm tests
        run: ./gradlew assembleDebug lintDebug testDebugUnitTest --stacktrace -DskipFormatKtlint

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ env.COMMIT_SHORT_SHA }}
          path: app/build/outputs/apk/debug/*.apk

      - name: Upload release
        env:
          GH_TOKEN: ${{ github.token }}
        if: github.ref == 'refs/heads/main'
        run: |
          gh release create ${{ env.tag }} \
            --title "${{ github.event.repository.name }} ${{ env.tag }}" \
            --target ${{ github.sha }} \
            --generate-notes --notes-start-tag ${{ env.prev_tag }} \
            ./app/build/outputs/apk/debug/*.apk
